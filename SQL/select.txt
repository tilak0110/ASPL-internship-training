-- Using the wildcard character to select all columns in a query
SELECT * FROM employees;

-- SELECT Using Column Aliases
SELECT first_name AS fname, last_name AS lname FROM employees;

-- Select Individual Columns
SELECT first_name, last_name, salary FROM employees;

-- Selecting specified number of records
SELECT * FROM employees LIMIT 5;

-- Selecting with Condition
SELECT * FROM employees WHERE salary > 50000;

-- Selecting with CASE
SELECT first_name, last_name, salary,
       CASE 
           WHEN salary > 80000 THEN 'High'
           WHEN salary BETWEEN 50000 AND 80000 THEN 'Medium'
           ELSE 'Low'
       END AS salary_category
FROM employees;

-- Select columns which are named after reserved keyword
SELECT `order`, `rank`, `group` FROM reserved_keywords_table;

-- Selecting with table alias
SELECT e.first_name, e.last_name, d.department_name 
FROM employees e 
JOIN departments d ON e.department_id = d.department_id;

-- Selecting with more than 1 condition
SELECT * FROM employees WHERE salary > 50000 AND department_id = 3;

-- Selecting without Locking the table
SELECT * FROM employees LOCK IN SHARE MODE;

-- Selecting with Aggregate function
SELECT department_id, AVG(salary) AS avg_salary FROM employees GROUP BY department_id;

-- Select with condition of multiple values from column
SELECT * FROM employees WHERE department_id IN (1, 2, 3);

-- Get aggregated result for row groups
SELECT department_id, COUNT(*) AS total_employees FROM employees GROUP BY department_id;

-- Selection with sorted Results
SELECT * FROM employees ORDER BY salary DESC;

-- Selecting with null
SELECT * FROM employees WHERE middle_name IS NULL;

-- Select distinct (unique values only)
SELECT DISTINCT department_id FROM employees;

-- Select rows from multiple tables
SELECT employees.first_name, employees.last_name, departments.department_name 
FROM employees 
INNER JOIN departments ON employees.department_id = departments.department_id;
